{
  "contractName": "gainsbot_fund",
  "abi": [
    {
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "_owner"
        },
        {
          "type": "address",
          "name": "_uniswapDaiExchange"
        },
        {
          "type": "address",
          "name": "_uniswapcDaiExchange"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "constructor"
    },
    {
      "name": "setupFund",
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "_tradeRecipient"
        },
        {
          "type": "uint256[20]",
          "name": "_sellAmounts"
        },
        {
          "type": "uint256[20]",
          "name": "_sellPrices"
        },
        {
          "type": "int128",
          "name": "_numberOfSells"
        },
        {
          "type": "uint256",
          "name": "_commitmentLock",
          "unit": "sec"
        },
        {
          "type": "bool",
          "name": "_sellToCDai"
        }
      ],
      "constant": false,
      "payable": true,
      "type": "function",
      "gas": 1545008
    },
    {
      "name": "getSellAmounts",
      "outputs": [
        {
          "type": "uint256[20]",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 7568
    },
    {
      "name": "getSellPrices",
      "outputs": [
        {
          "type": "uint256[20]",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 7598
    },
    {
      "name": "getEtherPrice",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 3269
    },
    {
      "name": "executeTrade",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "_tradeIndex"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 5858
    },
    {
      "name": "owner",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 633
    },
    {
      "name": "factory",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 663
    },
    {
      "name": "recipient",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 693
    },
    {
      "name": "uniswapDaiExchange",
      "outputs": [
        {
          "type": "address",
          "name": "out",
          "unit": "Exchange"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 723
    },
    {
      "name": "uniswapcDaiExchange",
      "outputs": [
        {
          "type": "address",
          "name": "out",
          "unit": "Exchange"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 753
    },
    {
      "name": "daiTokenContract",
      "outputs": [
        {
          "type": "address",
          "name": "out",
          "unit": "Token"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 783
    },
    {
      "name": "sellAmounts",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1030
    },
    {
      "name": "sellPrices",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1060
    },
    {
      "name": "numberOfSells",
      "outputs": [
        {
          "type": "int128",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 873
    },
    {
      "name": "lastSell",
      "outputs": [
        {
          "type": "int128",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 903
    },
    {
      "name": "sellToCDai",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 933
    },
    {
      "name": "commitmentLock",
      "outputs": [
        {
          "type": "uint256",
          "name": "out",
          "unit": "sec"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 963
    },
    {
      "name": "lastExecutedChange",
      "outputs": [
        {
          "type": "uint256",
          "name": "out",
          "unit": "sec"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 993
    }
  ],
  "bytecode": "0x740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a0526060610cc96101403934156100a157600080fd5b6020610cc960c03960c05160205181106100ba57600080fd5b5060206020610cc90160c03960c05160205181106100d757600080fd5b5060206040610cc90160c03960c05160205181106100f457600080fd5b50610160516003556003543b61010957600080fd5b600354301861011757600080fd5b60206102006004639d76ea586101a0526101bc6003545afa61013857600080fd5b600050610200516005556101805160045561014051600055336001557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600955610cb156600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263e01e51fb60005114156103615761058060046101403760043560205181106100bb57600080fd5b5060605161052435806040519013156100d357600080fd5b80919012156100e157600080fd5b5061056435600281106100f357600080fd5b50600054331461010257600080fd5b600c541561010f57600080fd5b601461066051131561012057600080fd5b600660c052602060c0206101608060006020020151600083015580600160200201516001830155806002602002015160028301558060036020020151600383015580600460200201516004830155806005602002015160058301558060066020020151600683015580600760200201516007830155806008602002015160088301558060096020020151600983015580600a6020020151600a83015580600b6020020151600b83015580600c6020020151600c83015580600d6020020151600d83015580600e6020020151600e83015580600f6020020151600f830155806010602002015160108301558060116020020151601183015580601260200201516012830155806013602002015160138301555050600760c052602060c0206103e08060006020020151600083015580600160200201516001830155806002602002015160028301558060036020020151600383015580600460200201516004830155806005602002015160058301558060066020020151600683015580600760200201516007830155806008602002015160088301558060096020020151600983015580600a6020020151600a83015580600b6020020151600b83015580600c6020020151600c83015580600d6020020151600d83015580600e6020020151600e83015580600f6020020151600f83015580601060200201516010830155806011602002015160118301558060126020020151601283015580601360200201516013830155505042600c556106605160085561068051600b556106a051600a55005b63b4d35399600051141561052e57341561037a57600080fd5b610160600660008160c052602060c0200154826000602002015260018160c052602060c0200154826001602002015260028160c052602060c0200154826002602002015260038160c052602060c0200154826003602002015260048160c052602060c0200154826004602002015260058160c052602060c0200154826005602002015260068160c052602060c0200154826006602002015260078160c052602060c0200154826007602002015260088160c052602060c0200154826008602002015260098160c052602060c02001548260096020020152600a8160c052602060c020015482600a6020020152600b8160c052602060c020015482600b6020020152600c8160c052602060c020015482600c6020020152600d8160c052602060c020015482600d6020020152600e8160c052602060c020015482600e6020020152600f8160c052602060c020015482600f602002015260108160c052602060c0200154826010602002015260118160c052602060c0200154826011602002015260128160c052602060c0200154826012602002015260138160c052602060c020015482601360200201525050610280610160f3005b630b23431b60005114156106fb57341561054757600080fd5b610160600760008160c052602060c0200154826000602002015260018160c052602060c0200154826001602002015260028160c052602060c0200154826002602002015260038160c052602060c0200154826003602002015260048160c052602060c0200154826004602002015260058160c052602060c0200154826005602002015260068160c052602060c0200154826006602002015260078160c052602060c0200154826007602002015260088160c052602060c0200154826008602002015260098160c052602060c02001548260096020020152600a8160c052602060c020015482600a6020020152600b8160c052602060c020015482600b6020020152600c8160c052602060c020015482600c6020020152600d8160c052602060c020015482600d6020020152600e8160c052602060c020015482600e6020020152600f8160c052602060c020015482600f602002015260108160c052602060c0200154826010602002015260118160c052602060c0200154826011602002015260128160c052602060c0200154826012602002015260138160c052602060c020015482601360200201525050610280610160f3005b63ca7c4dba60005114156107d457341561071457600080fd5b6005543b61072157600080fd5b600554301861072f57600080fd5b60206101e060246370a08231610160526003546101805261017c6005545afa61075757600080fd5b6000506101e05161014052600354316102005261020051610220526102205161077f57600080fd5b610220516101405115156107945760006107c9565b670de0b6b3a764000061014051670de0b6b3a7640000610140510204146107ba57600080fd5b670de0b6b3a764000061014051025b0460005260206000f3005b63218a3aba60005114156108b357602060046101403734156107f557600080fd5b6060516004358060405190131561080b57600080fd5b809190121561081957600080fd5b506060516001600854038060405190131561083357600080fd5b809190121561084157600080fd5b610140511261084f57600080fd5b610140516014811061086057600080fd5b600760c052602060c020015460206101c0600463ca7c4dba6101605261017c6000305af161088d57600080fd5b6101c0511161089b57600080fd5b6000600660c052602060c020015460005260206000f3005b638da5cb5b60005114156108d95734156108cc57600080fd5b60005460005260206000f3005b63c45a015560005114156108ff5734156108f257600080fd5b60015460005260206000f3005b6366d003ac600051141561092557341561091857600080fd5b60025460005260206000f3005b6299a6d5600051141561094a57341561093d57600080fd5b60035460005260206000f3005b63eda79e7c600051141561097057341561096357600080fd5b60045460005260206000f3005b6322f9036d600051141561099657341561098957600080fd5b60055460005260206000f3005b63cf162fec6000511415610a0357602060046101403734156109b757600080fd5b606051600435806040519013156109cd57600080fd5b80919012156109db57600080fd5b5061014051601481106109ed57600080fd5b600660c052602060c020015460005260206000f3005b63b4f105a36000511415610a705760206004610140373415610a2457600080fd5b60605160043580604051901315610a3a57600080fd5b8091901215610a4857600080fd5b506101405160148110610a5a57600080fd5b600760c052602060c020015460005260206000f3005b63a664daaa6000511415610a96573415610a8957600080fd5b60085460005260206000f3005b63b255912b6000511415610abc573415610aaf57600080fd5b60095460005260206000f3005b637c583bb66000511415610ae2573415610ad557600080fd5b600a5460005260206000f3005b6356ca58516000511415610b08573415610afb57600080fd5b600b5460005260206000f3005b639f6cd0716000511415610b2e573415610b2157600080fd5b600c5460005260206000f3005b60006000fd5b61017d610cb10361017d60003961017d610cb1036000f3",
  "deployedBytecode": "0x600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263e01e51fb60005114156103615761058060046101403760043560205181106100bb57600080fd5b5060605161052435806040519013156100d357600080fd5b80919012156100e157600080fd5b5061056435600281106100f357600080fd5b50600054331461010257600080fd5b600c541561010f57600080fd5b601461066051131561012057600080fd5b600660c052602060c0206101608060006020020151600083015580600160200201516001830155806002602002015160028301558060036020020151600383015580600460200201516004830155806005602002015160058301558060066020020151600683015580600760200201516007830155806008602002015160088301558060096020020151600983015580600a6020020151600a83015580600b6020020151600b83015580600c6020020151600c83015580600d6020020151600d83015580600e6020020151600e83015580600f6020020151600f830155806010602002015160108301558060116020020151601183015580601260200201516012830155806013602002015160138301555050600760c052602060c0206103e08060006020020151600083015580600160200201516001830155806002602002015160028301558060036020020151600383015580600460200201516004830155806005602002015160058301558060066020020151600683015580600760200201516007830155806008602002015160088301558060096020020151600983015580600a6020020151600a83015580600b6020020151600b83015580600c6020020151600c83015580600d6020020151600d83015580600e6020020151600e83015580600f6020020151600f83015580601060200201516010830155806011602002015160118301558060126020020151601283015580601360200201516013830155505042600c556106605160085561068051600b556106a051600a55005b63b4d35399600051141561052e57341561037a57600080fd5b610160600660008160c052602060c0200154826000602002015260018160c052602060c0200154826001602002015260028160c052602060c0200154826002602002015260038160c052602060c0200154826003602002015260048160c052602060c0200154826004602002015260058160c052602060c0200154826005602002015260068160c052602060c0200154826006602002015260078160c052602060c0200154826007602002015260088160c052602060c0200154826008602002015260098160c052602060c02001548260096020020152600a8160c052602060c020015482600a6020020152600b8160c052602060c020015482600b6020020152600c8160c052602060c020015482600c6020020152600d8160c052602060c020015482600d6020020152600e8160c052602060c020015482600e6020020152600f8160c052602060c020015482600f602002015260108160c052602060c0200154826010602002015260118160c052602060c0200154826011602002015260128160c052602060c0200154826012602002015260138160c052602060c020015482601360200201525050610280610160f3005b630b23431b60005114156106fb57341561054757600080fd5b610160600760008160c052602060c0200154826000602002015260018160c052602060c0200154826001602002015260028160c052602060c0200154826002602002015260038160c052602060c0200154826003602002015260048160c052602060c0200154826004602002015260058160c052602060c0200154826005602002015260068160c052602060c0200154826006602002015260078160c052602060c0200154826007602002015260088160c052602060c0200154826008602002015260098160c052602060c02001548260096020020152600a8160c052602060c020015482600a6020020152600b8160c052602060c020015482600b6020020152600c8160c052602060c020015482600c6020020152600d8160c052602060c020015482600d6020020152600e8160c052602060c020015482600e6020020152600f8160c052602060c020015482600f602002015260108160c052602060c0200154826010602002015260118160c052602060c0200154826011602002015260128160c052602060c0200154826012602002015260138160c052602060c020015482601360200201525050610280610160f3005b63ca7c4dba60005114156107d457341561071457600080fd5b6005543b61072157600080fd5b600554301861072f57600080fd5b60206101e060246370a08231610160526003546101805261017c6005545afa61075757600080fd5b6000506101e05161014052600354316102005261020051610220526102205161077f57600080fd5b610220516101405115156107945760006107c9565b670de0b6b3a764000061014051670de0b6b3a7640000610140510204146107ba57600080fd5b670de0b6b3a764000061014051025b0460005260206000f3005b63218a3aba60005114156108b357602060046101403734156107f557600080fd5b6060516004358060405190131561080b57600080fd5b809190121561081957600080fd5b506060516001600854038060405190131561083357600080fd5b809190121561084157600080fd5b610140511261084f57600080fd5b610140516014811061086057600080fd5b600760c052602060c020015460206101c0600463ca7c4dba6101605261017c6000305af161088d57600080fd5b6101c0511161089b57600080fd5b6000600660c052602060c020015460005260206000f3005b638da5cb5b60005114156108d95734156108cc57600080fd5b60005460005260206000f3005b63c45a015560005114156108ff5734156108f257600080fd5b60015460005260206000f3005b6366d003ac600051141561092557341561091857600080fd5b60025460005260206000f3005b6299a6d5600051141561094a57341561093d57600080fd5b60035460005260206000f3005b63eda79e7c600051141561097057341561096357600080fd5b60045460005260206000f3005b6322f9036d600051141561099657341561098957600080fd5b60055460005260206000f3005b63cf162fec6000511415610a0357602060046101403734156109b757600080fd5b606051600435806040519013156109cd57600080fd5b80919012156109db57600080fd5b5061014051601481106109ed57600080fd5b600660c052602060c020015460005260206000f3005b63b4f105a36000511415610a705760206004610140373415610a2457600080fd5b60605160043580604051901315610a3a57600080fd5b8091901215610a4857600080fd5b506101405160148110610a5a57600080fd5b600760c052602060c020015460005260206000f3005b63a664daaa6000511415610a96573415610a8957600080fd5b60085460005260206000f3005b63b255912b6000511415610abc573415610aaf57600080fd5b60095460005260206000f3005b637c583bb66000511415610ae2573415610ad557600080fd5b600a5460005260206000f3005b6356ca58516000511415610b08573415610afb57600080fd5b600b5460005260206000f3005b639f6cd0716000511415610b2e573415610b2157600080fd5b600c5460005260206000f3005b60006000fd",
  "source": "\n#An instance of this contract is deployed for each user. It stores all ether and interacts\n#with uniswap to preform trades. Trades are initalized by relayers who are sent back the gass\n#used in executing the trades. Current price of ether is pulled from the uniswap pool\n\ncontract Factory():\n    def getExchange(token_addr: address) -> address: constant\n\ncontract Exchange():\n    def getEthToTokenInputPrice(eth_sold: uint256) -> uint256(wei): constant\n    def ethToTokenTransferInput(min_tokens: uint256, deadline: timestamp, recipient: address) -> uint256: modifying\n    def tokenAddress() -> address: constant\n\ncontract Token():\n    def balanceOf(_owner : address) -> uint256: constant\n    def transfer(_to : address, _value : uint256) -> bool: modifying\n    def transferFrom(_from : address, _to : address, _value : uint256) -> bool: modifying\n\nowner: public(address)\nfactory: public(address)\nrecipient: public(address)\n\nuniswapDaiExchange: public(Exchange)\nuniswapcDaiExchange: public(Exchange)\n\ndaiTokenContract: public(Token)\n\nsellAmounts: public(uint256[20])\nsellPrices: public(uint256[20])\nnumberOfSells: public(int128)\nlastSell: public(int128)\nsellToCDai: public(bool)\n\ncommitmentLock: public(timestamp)\nlastExecutedChange: public(timestamp)\n\n@public\ndef __init__(_owner: address, _uniswapDaiExchange: address, _uniswapcDaiExchange: address):\n    self.uniswapDaiExchange = Exchange(_uniswapDaiExchange)\n    self.daiTokenContract = Token(self.uniswapDaiExchange.tokenAddress())\n    self.uniswapcDaiExchange = Exchange(_uniswapcDaiExchange)\n\n    self.owner = _owner\n    self.factory = msg.sender\n    self.lastSell = -1\n\n@public\n@payable\ndef setupFund(_tradeRecipient: address, _sellAmounts: uint256[20], _sellPrices: uint256[20], _numberOfSells: int128, _commitmentLock: timestamp, _sellToCDai: bool):\n    assert msg.sender == self.owner\n    assert self.lastExecutedChange == 0\n    assert _numberOfSells <= 20  \n    \n    self.sellAmounts = _sellAmounts\n    self.sellPrices = _sellPrices\n    self.lastExecutedChange = block.timestamp\n    self.numberOfSells = _numberOfSells\n    self.commitmentLock = _commitmentLock\n    self.sellToCDai = _sellToCDai\n\n@constant\n@public\ndef getSellAmounts() -> uint256[20]:\n    return self.sellAmounts\n\n@constant\n@public\ndef getSellPrices() -> uint256[20]:\n    return self.sellPrices\n\n@constant\n@public\ndef getEtherPrice() -> uint256:\n    exchangeTokenBalance: uint256 = self.daiTokenContract.balanceOf(self.uniswapDaiExchange)\n    exchangeEtherBalance: uint256(wei) = self.uniswapDaiExchange.balance\n    exchangeEtherBalanceUint: uint256 = as_unitless_number(exchangeEtherBalance)\n    return (exchangeTokenBalance*10**18) / exchangeEtherBalanceUint\n\n@public\ndef executeTrade(_tradeIndex: int128) -> uint256:\n    assert _tradeIndex < self.numberOfSells - 1\n    assert self.getEtherPrice() > self.sellPrices[_tradeIndex]\n    return self.sellAmounts[0]",
  "sourcePath": "/Users/chris/Projects/GainsDapp/contracts/gainsbot_fund.vy",
  "compiler": {
    "name": "vyper",
    "version": "0.1.0b10"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-05T08:28:08.760Z"
}